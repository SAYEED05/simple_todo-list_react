{"version":3,"sources":["App.js","index.js"],"names":["Todo","todo","index","complete","remove","className","style","background","isCompleted","text","display","onClick","FormTodo","addtodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","todos","setTodos","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","newtodo","splice","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAGA,SAASA,EAAT,GAA6C,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,SAASC,EAAQ,EAARA,OAEpC,OAAQ,sBAAMC,UAAU,OAAOC,MAAO,CAACC,WAAYN,EAAKO,YAAc,mBAAqB,IAAnF,UACLP,EAAKQ,KACN,gCACA,wBAAQH,MAAO,CAACI,QAAST,EAAKO,YAAc,OAAS,IAAMH,UAAU,WAAYM,QAAS,kBAAIR,EAASD,IAAvG,oBACA,wBAAQG,UAAU,SAAQM,QAAS,kBAAIP,EAAOF,IAA9C,0BAOF,SAASU,EAAT,GAA6B,IAAVC,EAAS,EAATA,QAAS,EACHC,mBAAS,IADN,mBACnBC,EADmB,KACbC,EADa,KAQ1B,OAEE,sBAAMC,SARY,SAACC,GACrBA,EAAEC,iBACEJ,IACJF,EAAQE,GACRC,EAAS,MAIP,SACE,uBAAOI,KAAK,OAAOf,UAAU,QAAQU,MAAOA,EAAOM,YAAY,iBAAiBC,SAAU,SAAAJ,GAAC,OAAEF,EAASE,EAAEK,OAAOR,YAyDtGS,MAjDf,WAAgB,IAAD,EAESV,mBAAS,IAFlB,mBAEPW,EAFO,KAEDC,EAFC,KAKbC,qBAAU,WACNC,aAAaC,QAAQ,eACvBH,EAASI,KAAKC,MAAMH,aAAaC,QAAQ,kBAEzC,IAGFF,qBAAU,WACRC,aAAaI,QAAQ,aAAaF,KAAKG,UAAUR,MACjD,CAACA,IAEH,IAKQtB,EAAS,SAAAD,GACb,IAAMgC,EAAQ,YAAIT,GAClBS,EAAQhC,GAAOM,aAAY,EAC3BkB,EAASQ,IAGL9B,EAAO,SAAAF,GACX,IAAMgC,EAAQ,YAAIT,GAClBS,EAAQC,OAAOjC,EAAM,GACrBwB,EAASQ,IAIb,OACE,qBAAK7B,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,uBACAoB,EAAMW,KAAI,SAACnC,EAAKC,GAAN,OACX,cAACF,EAAD,CAAkBE,MAAOA,EAAOD,KAAMA,EAAME,SAAUA,EAAUC,OAAQA,GAA7DF,MAEf,cAACU,EAAD,CAAUC,QAzBK,SAAAJ,GACb,IAAOyB,EAAQ,GAAD,mBAAKT,GAAL,CAAY,CAAChB,UAC3BiB,EAASQ,YChDbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.36d7b540.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport './App.css';\n\nfunction Todo({todo, index,complete,remove}){\n\nreturn (<div  className='todo' style={{background: todo.isCompleted ? \"rgb(5, 226, 152)\" : \"\" }}>\n  {todo.text}\n  <div>\n  <button style={{display: todo.isCompleted ? \"none\" : \"\" }} className='complete'  onClick={()=>complete(index)}>&#x2714;</button>\n  <button className='remove'onClick={()=>remove(index)}>&#10008;</button>\n  </div>\n</div>\n);\n}\n\n\nfunction FormTodo({addtodo}){\n  const [value,setValue]=useState('');\n  const handleSubmit= (e)=>{\n  e.preventDefault();\n  if(!value) return;\n  addtodo(value);\n  setValue('');\n};\n  return(\n\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" className='input' value={value} placeholder='Add NewTodo...' onChange={e=>setValue(e.target.value)}/>\n    </form>\n  );\n}\n\n\n\n\nfunction App() {\n\n  const[todos,setTodos]=useState([]);\n\n  //only runs once the first time this component is rendered\n  useEffect(()=>{\n   if(localStorage.getItem(\"todo-lists\")) {\n    setTodos(JSON.parse(localStorage.getItem(\"todo-lists\")))\n   }\n  },[])\n\n  //runs everytime state changes\n  useEffect(()=>{\n    localStorage.setItem(\"todo-lists\",JSON.stringify(todos))\n  },[todos])\n\n  const addtodo =text=>{\n    const  newtodo=[...todos, {text}];\n    setTodos(newtodo);    \n    }\n\n    const complete=index=>{\n      const newtodo=[...todos];\n      newtodo[index].isCompleted=true;\n      setTodos(newtodo);\n    } \n    \n    const remove=index=>{\n      const newtodo=[...todos];\n      newtodo.splice(index,1);\n      setTodos(newtodo);\n    } \n\n\n  return (\n    <div className=\"App\">\n     <div className=\"todo-list\">\n       <div className=\"title\">ToDo List</div>\n      {todos.map((todo,index)=>(\n      <Todo key={index} index={index} todo={todo} complete={complete} remove={remove} />\n      ))}\n  <FormTodo addtodo={addtodo}/>\n     </div>\n   \n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}